// generated by Fast Light User Interface Designer (fluid) version 1.0303

#include "proj_wiz_form.h"
bool pr_wiz_ok; 

Fl_Double_Window *proj_wiz=(Fl_Double_Window *)0;

Fl_Input *pr_dir_input=(Fl_Input *)0;

Fl_Button *pr_wiz_browse_btn=(Fl_Button *)0;

static void cb_pr_wiz_browse_btn(Fl_Button*, void*) {
  pr_dir_input->value(fl_dir_chooser("Choose Directory",0,0));
}

Fl_Input *pr_name_input=(Fl_Input *)0;

Fl_Button *pr_wiz_ok_btn=(Fl_Button *)0;

static void cb_pr_wiz_ok_btn(Fl_Button*, void*) {
  pr_wiz_ok=true;
proj_wiz->hide();
}

Fl_Button *pr_wiz_cancel_btn=(Fl_Button *)0;

static void cb_pr_wiz_cancel_btn(Fl_Button*, void*) {
  proj_wiz->hide();
}

Fl_Round_Button *x_app=(Fl_Round_Button *)0;

Fl_Round_Button *con_app=(Fl_Round_Button *)0;

Fl_Round_Button *lib_static=(Fl_Round_Button *)0;

Fl_Round_Button *lib_shared=(Fl_Round_Button *)0;

Fl_Input *pr_own_makefile=(Fl_Input *)0;

static void cb_add(Fl_Button*, void*) {
  char *newfile = fl_file_chooser("Select Makefile", "Make*.*", "");

if(newfile=="") return;
if (newfile != NULL) 
{
	char rel[255];
	fl_filename_relative(rel,newfile);
	pr_own_makefile->value(trim(string(pr_own_makefile->value())+ " " + rel).c_str());
	pr_changed = true;
};
}

Fl_Check_Button *main_cpp_chk=(Fl_Check_Button *)0;

Fl_Check_Button *own_make_chk=(Fl_Check_Button *)0;

Fl_Double_Window* make_proj_wizard() {
  { proj_wiz = new Fl_Double_Window(475, 260, "New Project");
    { pr_dir_input = new Fl_Input(130, 65, 275, 25, "Project Directory");
    } // Fl_Input* pr_dir_input
    { pr_wiz_browse_btn = new Fl_Button(415, 65, 35, 25, "...");
      pr_wiz_browse_btn->callback((Fl_Callback*)cb_pr_wiz_browse_btn);
    } // Fl_Button* pr_wiz_browse_btn
    { pr_name_input = new Fl_Input(130, 25, 320, 25, "Project Name");
    } // Fl_Input* pr_name_input
    { pr_wiz_ok_btn = new Fl_Button(215, 210, 80, 25, "OK");
      pr_wiz_ok_btn->callback((Fl_Callback*)cb_pr_wiz_ok_btn);
    } // Fl_Button* pr_wiz_ok_btn
    { pr_wiz_cancel_btn = new Fl_Button(370, 210, 80, 25, "Cancel");
      pr_wiz_cancel_btn->callback((Fl_Callback*)cb_pr_wiz_cancel_btn);
    } // Fl_Button* pr_wiz_cancel_btn
    { Fl_Group* o = new Fl_Group(130, 100, 320, 65, "Type");
      o->box(FL_THIN_UP_BOX);
      o->labeltype(FL_EMBOSSED_LABEL);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
      { x_app = new Fl_Round_Button(180, 135, 85, 20, "FLTK / X11 App");
        x_app->type(102);
        x_app->down_box(FL_ROUND_DOWN_BOX);
        x_app->value(1);
      } // Fl_Round_Button* x_app
      { con_app = new Fl_Round_Button(180, 110, 110, 25, "Console App");
        con_app->type(102);
        con_app->down_box(FL_ROUND_DOWN_BOX);
        con_app->value(0);
      } // Fl_Round_Button* con_app
      { lib_static = new Fl_Round_Button(320, 110, 110, 25, "Static Library");
        lib_static->down_box(FL_ROUND_DOWN_BOX);
        lib_static->hide();
        lib_static->deactivate();
        lib_static->value(0);
      } // Fl_Round_Button* lib_static
      { lib_shared = new Fl_Round_Button(320, 130, 120, 25, "Shared Library");
        lib_shared->down_box(FL_ROUND_DOWN_BOX);
        lib_shared->hide();
        lib_shared->deactivate();
        lib_shared->value(0);
      } // Fl_Round_Button* lib_shared
      o->end();
    } // Fl_Group* o
    { pr_own_makefile = new Fl_Input(130, 170, 320, 25, "Own Makefile");
      pr_own_makefile->hide();
      pr_own_makefile->deactivate();
    } // Fl_Input* pr_own_makefile
    { Fl_Button* o = new Fl_Button(455, 170, 35, 25, "add");
      o->callback((Fl_Callback*)cb_add);
      o->hide();
      o->deactivate();
    } // Fl_Button* o
    { main_cpp_chk = new Fl_Check_Button(130, 175, 155, 25, "Generate \'main.cpp\'");
      main_cpp_chk->down_box(FL_DOWN_BOX);
    } // Fl_Check_Button* main_cpp_chk
    { own_make_chk = new Fl_Check_Button(130, 205, 150, 25, "Use own makefile");
      own_make_chk->down_box(FL_DOWN_BOX);
      own_make_chk->hide();
      own_make_chk->deactivate();
    } // Fl_Check_Button* own_make_chk
    proj_wiz->set_modal();
    proj_wiz->end();
  } // Fl_Double_Window* proj_wiz
  return proj_wiz;
}
